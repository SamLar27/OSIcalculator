theme(
axis.text.x = element_text(size = 12),              # Maintenant x-axis a les noms d'essais
axis.text.y = element_text(size = 12),              # Y-axis a les valeurs
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
panel.grid.major.x = element_blank(),               # Supprimer les lignes de grille verticales
panel.grid.minor = element_blank()                  # Supprimer toutes les lignes de grille mineures
) +
guides(fill = FALSE)  # Supprimer la légende
Boxplot_Placebo_lung_per_trial_horizontal
Boxplot_Placebo_lung_per_trial_horizontal <- ggplot(Data_Oracle_lung, aes(x = Enrolled_Trial_name, y = delta_FEV1_preBD_mL, fill = Enrolled_Trial_name)) +
# Create horizontal boxplots with outliers removed
geom_boxplot(
width = 0.7,
color = "black",
alpha = 0.8,
outlier.shape = NA    # Set to NA to remove outliers from display
) +
# Add mean points
stat_summary(
fun = mean,
geom = "point",
shape = 23,             # Diamond shape for mean
size = 3,               # Size of the point
color = "black",        # Border color
fill = "white",         # Fill color
position = position_dodge(width = 0.7)
) +
# Add text labels with mean values
stat_summary(
fun = mean,
geom = "text",
aes(label = round(..y..)), # Utiliser la valeur y calculée pour les étiquettes
position = position_nudge(y = 60), # Déplacer verticalement pour positionner les étiquettes
color = "black",
size = 4  # Text size
) +
# Reference line at zero
geom_hline(               # Changed from geom_vline to geom_hline
yintercept = 0,
linetype = "dashed",
color = "black",
size = 0.5
) +
# Set y-axis limits from -1000 to 1000
coord_cartesian(ylim = c(-1000, 1000)) +
# Flip coordinates to make boxplot horizontal
#coord_flip() +
# Labels and theme
labs(
title = NULL,
x = NULL,                # No x-axis label needed (trial names are self-explanatory)
y = "FEV1 Placebo Change (ml)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),              # Maintenant x-axis a les noms d'essais
axis.text.y = element_text(size = 12),              # Y-axis a les valeurs
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
panel.grid.major.x = element_blank(),               # Supprimer les lignes de grille verticales
panel.grid.minor = element_blank()                  # Supprimer toutes les lignes de grille mineures
) +
guides(fill = FALSE)  # Supprimer la légende
Boxplot_Placebo_lung_per_trial_horizontal
Boxplot_Placebo_lung_per_trial_horizontal <- ggplot(Data_Oracle_lung, aes(x = Enrolled_Trial_name, y = delta_FEV1_preBD_mL, fill = Enrolled_Trial_name)) +
# Create horizontal boxplots with outliers removed
geom_boxplot(
width = 0.7,
color = "black",
alpha = 0.8,
outlier.shape = NA    # Set to NA to remove outliers from display
) +
# Add mean points
stat_summary(
fun = mean,
geom = "point",
shape = 23,             # Diamond shape for mean
size = 3,               # Size of the point
color = "black",        # Border color
fill = "white",         # Fill color
position = position_dodge(width = 0.7)
) +
# Add text labels with mean values
stat_summary(
fun = mean,
geom = "text",
aes(label = round(..y..)), # Utiliser la valeur y calculée pour les étiquettes
position = position_nudge(y = 40), # Déplacer verticalement pour positionner les étiquettes
color = "black",
size = 4  # Text size
) +
# Reference line at zero
geom_hline(               # Changed from geom_vline to geom_hline
yintercept = 0,
linetype = "dashed",
color = "black",
size = 0.5
) +
# Set y-axis limits from -1000 to 1000
coord_cartesian(ylim = c(-1000, 1000)) +
# Flip coordinates to make boxplot horizontal
#coord_flip() +
# Labels and theme
labs(
title = NULL,
x = NULL,                # No x-axis label needed (trial names are self-explanatory)
y = "FEV1 Placebo Change (ml)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),              # Maintenant x-axis a les noms d'essais
axis.text.y = element_text(size = 12),              # Y-axis a les valeurs
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
panel.grid.major.x = element_blank(),               # Supprimer les lignes de grille verticales
panel.grid.minor = element_blank()                  # Supprimer toutes les lignes de grille mineures
) +
guides(fill = FALSE)  # Supprimer la légende
Boxplot_Placebo_lung_per_trial_horizontal
Boxplot_Placebo_lung_per_trial_horizontal <- ggplot(Data_Oracle_lung, aes(x = Enrolled_Trial_name, y = delta_FEV1_preBD_mL, fill = Enrolled_Trial_name)) +
# Create horizontal boxplots with outliers removed
geom_boxplot(
width = 0.7,
color = "black",
alpha = 0.8,
outlier.shape = NA    # Set to NA to remove outliers from display
) +
# Add mean points
stat_summary(
fun = mean,
geom = "point",
shape = 23,             # Diamond shape for mean
size = 3,               # Size of the point
color = "black",        # Border color
fill = "white",         # Fill color
position = position_dodge(width = 0.7)
) +
# Add text labels with mean values
stat_summary(
fun = mean,
geom = "text",
aes(label = round(..y..)), # Utiliser la valeur y calculée pour les étiquettes
position = position_nudge(y = 60), # Déplacer verticalement pour positionner les étiquettes
color = "black",
size = 4  # Text size
) +
# Reference line at zero
geom_hline(               # Changed from geom_vline to geom_hline
yintercept = 0,
linetype = "dashed",
color = "black",
size = 0.5
) +
# Set y-axis limits from -1000 to 1000
coord_cartesian(ylim = c(-1000, 1000)) +
# Flip coordinates to make boxplot horizontal
#coord_flip() +
# Labels and theme
labs(
title = NULL,
x = NULL,                # No x-axis label needed (trial names are self-explanatory)
y = "FEV1 Placebo Change (ml)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),              # Maintenant x-axis a les noms d'essais
axis.text.y = element_text(size = 12),              # Y-axis a les valeurs
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
panel.grid.major.x = element_blank(),               # Supprimer les lignes de grille verticales
panel.grid.minor = element_blank()                  # Supprimer toutes les lignes de grille mineures
) +
guides(fill = FALSE)  # Supprimer la légende
Boxplot_Placebo_lung_per_trial_horizontal
Boxplot_Placebo_lung_per_trial_horizontal <- ggplot(Data_Oracle_lung, aes(x = Enrolled_Trial_name, y = delta_FEV1_preBD_mL, fill = Enrolled_Trial_name)) +
# Create horizontal boxplots with outliers removed
geom_boxplot(
width = 0.7,
color = "black",
alpha = 0.8,
outlier.shape = NA    # Set to NA to remove outliers from display
) +
# Add mean points
stat_summary(
fun = mean,
geom = "point",
shape = 23,             # Diamond shape for mean
size = 3,               # Size of the point
color = "black",        # Border color
fill = "white",         # Fill color
position = position_dodge(width = 0.7)
) +
# Add text labels with mean values
stat_summary(
fun = mean,
geom = "text",
aes(label = round(..y..)), # Utiliser la valeur y calculée pour les étiquettes
position = position_nudge(y = 50), # Déplacer verticalement pour positionner les étiquettes
color = "black",
size = 4  # Text size
) +
# Reference line at zero
geom_hline(               # Changed from geom_vline to geom_hline
yintercept = 0,
linetype = "dashed",
color = "black",
size = 0.5
) +
# Set y-axis limits from -1000 to 1000
coord_cartesian(ylim = c(-1000, 1000)) +
# Flip coordinates to make boxplot horizontal
#coord_flip() +
# Labels and theme
labs(
title = NULL,
x = NULL,                # No x-axis label needed (trial names are self-explanatory)
y = "FEV1 Placebo Change (ml)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),              # Maintenant x-axis a les noms d'essais
axis.text.y = element_text(size = 12),              # Y-axis a les valeurs
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
panel.grid.major.x = element_blank(),               # Supprimer les lignes de grille verticales
panel.grid.minor = element_blank()                  # Supprimer toutes les lignes de grille mineures
) +
guides(fill = FALSE)  # Supprimer la légende
Boxplot_Placebo_lung_per_trial_horizontal
ggsave("/Users/macbookpro/Documents/École/Doctorat en recherche/Projets/ORACLE/Project_Placebo/Boxplot_Placebo_lung_per_trial_horizontal.png",
plot = Boxplot_Placebo_lung_per_trial_horizontal, width=12, height =4, dpi = 300)
Boxplot_Placebo_lung_per_trial_horizontal <- ggplot(Data_Oracle_lung, aes(x = Enrolled_Trial_name, y = delta_FEV1_preBD_mL, fill = Enrolled_Trial_name)) +
# Create horizontal boxplots with outliers removed
geom_boxplot(
width = 0.7,
color = "black",
alpha = 0.8,
outlier.shape = NA    # Set to NA to remove outliers from display
) +
# Add mean points
stat_summary(
fun = mean,
geom = "point",
shape = 23,             # Diamond shape for mean
size = 3,               # Size of the point
color = "black",        # Border color
fill = "white",         # Fill color
position = position_dodge(width = 0.7)
) +
# Add text labels with mean values
stat_summary(
fun = mean,
geom = "text",
aes(label = round(..y..)), # Utiliser la valeur y calculée pour les étiquettes
position = position_nudge(y = 50), # Déplacer verticalement pour positionner les étiquettes
color = "black",
size = 4  # Text size
) +
# Reference line at zero
geom_hline(               # Changed from geom_vline to geom_hline
yintercept = 0,
linetype = "dashed",
color = "black",
size = 0.5
) +
# Set y-axis limits from -1000 to 1000
coord_cartesian(ylim = c(-1000, 1000)) +
# Flip coordinates to make boxplot horizontal
#coord_flip() +
# Labels and theme
labs(
title = NULL,
x = NULL,                # No x-axis label needed (trial names are self-explanatory)
y = "FEV1 Placebo Change (ml)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12, face = "bold"),              # Maintenant x-axis a les noms d'essais
axis.text.y = element_text(size = 12),              # Y-axis a les valeurs
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
panel.grid.major.x = element_blank(),               # Supprimer les lignes de grille verticales
panel.grid.minor = element_blank()                  # Supprimer toutes les lignes de grille mineures
) +
guides(fill = FALSE)  # Supprimer la légende
Boxplot_Placebo_lung_per_trial_horizontal
ggsave("/Users/macbookpro/Documents/École/Doctorat en recherche/Projets/ORACLE/Project_Placebo/Boxplot_Placebo_lung_per_trial_horizontal.png",
plot = Boxplot_Placebo_lung_per_trial_horizontal, width=12, height =4, dpi = 300)
# Set the variable of interest
variable <- "FeNO_baseline_ppb_imputated"
# Step 1: Extract data from the first imputation only
imp_data <- subset(Data_Oracle_lung, .imp == 1)
# Step 2: Fit the model with an interaction between FeNO spline and eosinophil groups
model <- glm(
as.formula(paste("delta_FEV1_preBD_mL ~ rcs(",variable,", 4)*Eosinophils_by_group_imputated+Age_imputated+BMI_imputated+FEV1_preBD_per10_Baseline_imputated+FEV1_PCT_reversibility_postBD_imputated+ as.factor(Enrolled_Trial_name)")),
data = imp_data
)
# Get the unique eosinophil groups
eos_groups <- unique(imp_data$Eosinophils_by_group_imputated)
# Step 3: Create a grid of FeNO values for prediction
feno_range <- seq(
from = 12.5,
to = 150,
length.out = 100
)
# Create an empty list to store prediction data for each eosinophil group
prediction_list <- list()
# Step 4: For each eosinophil group, create predictions
for (group in eos_groups) {
# Create a prediction data frame for this group
newdata <- data.frame(
FeNO_baseline_ppb_imputated = feno_range,
Eosinophils_by_group_imputated = group,
Age_imputated = mean(imp_data$Age_imputated, na.rm = TRUE),
BMI_imputated = mean(imp_data$BMI_imputated, na.rm = TRUE),
FEV1_preBD_per10_Baseline_imputated = mean(imp_data$FEV1_preBD_per10_Baseline_imputated, na.rm = TRUE),
FEV1_PCT_reversibility_postBD_imputated = mean(imp_data$FEV1_PCT_reversibility_postBD_imputated, na.rm = TRUE),
Enrolled_Trial_name = names(which.max(table(imp_data$Enrolled_Trial_name)))
)
# Get predictions with standard errors
pred <- predict(model, newdata = newdata, type = "response", se.fit = TRUE)
# Calculate 95% confidence intervals
prediction_data <- data.frame(
FeNO = feno_range,
Prediction = pred$fit,
lower_CI = pred$fit - 1.96 * pred$se.fit,
upper_CI = pred$fit + 1.96 * pred$se.fit,
Eosinophils_Group = group
)
# Store in the list
prediction_list[[as.character(group)]] <- prediction_data
}
# Combine all prediction data
all_predictions <- do.call(rbind, prediction_list)
# Step 5: Create plot with confidence intervals for each eosinophil group
ggplot(data = all_predictions, aes(x = FeNO, y = Prediction, color = Eosinophils_Group, fill = Eosinophils_Group)) +
# Add confidence interval ribbons
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.2, color = NA) +
# Add prediction lines
geom_line(size = 1) +
# Add horizontal reference line at 0
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
# Labels and formatting
xlab("FeNO (ppb)") +
ylab("Expected FEV1 change (mL)") +
# Use log2 scale for x-axis as in your original plot
scale_x_continuous(trans = "log2", breaks = c(0, 25, 50, 100)) +
# Set plot limits as specified
coord_cartesian(xlim = c(12.5, 150), ylim = c(0, 300)) +
# Apply color palette
scale_color_brewer(palette = "Set1", name = "Eosinophils Group") +
scale_fill_brewer(palette = "Set1", name = "Eosinophils Group") +
# Apply theme settings
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold", size = 14),
axis.text.y = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold", size = 14),
plot.title = element_text(face = "bold", size = 20),
legend.position = "bottom",
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 12)
) +
ggtitle("Effect of FeNO on FEV1 Change by Eosinophil Groups")
# Step 6 (optional): Test if the interaction is significant
anova_result <- anova(model)
print(anova_result)
# Define the order of eosinophil groups
ordered_groups <- c("<0.15", "0.15-0.3", ">0.3")
# Ensure the Eosinophils_Group factor has the correct order
all_predictions$Eosinophils_Group <- factor(all_predictions$Eosinophils_Group,
levels = ordered_groups)
# Create a new variable for eosinophil group names
all_predictions$Eosinophils_Group_Names <- factor(
ifelse(all_predictions$Eosinophils_Group == "<0.15", "BEC < 0.15",
ifelse(all_predictions$Eosinophils_Group == "0.15-0.3", "BEC ≥ 0.15 to 0.3",
ifelse(all_predictions$Eosinophils_Group == ">0.3", "BEC ≥ 0.3", NA))),
levels = c("BEC < 0.15", "BEC ≥ 0.15 to 0.3", "BEC ≥ 0.3")
)
# Check the result
head(all_predictions[, c("Eosinophils_Group", "Eosinophils_Group_Names")])
# Vertical facet plot using the new Eosinophils_Group_Names variable
facet_plot <- ggplot(data = all_predictions,
aes(x = FeNO, y = Prediction,
color = Eosinophils_Group_Names, fill = Eosinophils_Group_Names)) +
# Add confidence interval ribbons
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.2, color = NA) +
# Add prediction lines
geom_line(size = 1) +
# Add horizontal reference line at 0
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
# Create separate panels for each eosinophil group VERTICALLY in the specified order
facet_wrap(~ Eosinophils_Group_Names, ncol = 1) +  # Set ncol=3 for horizontal layout
# Labels and formatting
xlab("FeNO (ppb)") +
ylab("Expected FEV1 change (mL)") +
# Use log10 scale for x-axis instead of log2
scale_x_continuous(trans = "log10", breaks = c(25, 50, 100)) +
# Set plot limits
coord_cartesian(xlim = c(12.5, 150), ylim = c(0, 300)) +
# Custom colors for the new group names
scale_color_manual(values = c("BEC < 0.15" = "darkblue",
"BEC ≥ 0.15 to 0.3" = "darkorange",
"BEC ≥ 0.3" = "darkred")) +
scale_fill_manual(values = c("BEC < 0.15" = "darkblue",
"BEC ≥ 0.15 to 0.3" = "darkorange",
"BEC ≥ 0.3" = "darkred")) +
# Apply theme settings
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
axis.title = element_text(face = "bold", size = 14),
plot.title = element_text(face = "bold", size = 16),
strip.text = element_text(face = "bold", size = 12),
legend.position = "none"
)
# Display the vertical facet plot
print(facet_plot)
ggsave("/Users/macbookpro/Documents/École/Doctorat en recherche/Projets/ORACLE/Project_Placebo/Spline_FeNO_by_BEC_group.png",
plot = facet_plot, width=12, height =4, dpi = 300)
# Vertical facet plot using the new Eosinophils_Group_Names variable
facet_plot <- ggplot(data = all_predictions,
aes(x = FeNO, y = Prediction,
color = Eosinophils_Group_Names, fill = Eosinophils_Group_Names)) +
# Add confidence interval ribbons
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.2, color = NA) +
# Add prediction lines
geom_line(size = 1) +
# Add horizontal reference line at 0
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
# Create separate panels for each eosinophil group VERTICALLY in the specified order
facet_wrap(~ Eosinophils_Group_Names, ncol = 3) +  # Set ncol=3 for horizontal layout
# Labels and formatting
xlab("FeNO (ppb)") +
ylab("Expected FEV1 change (mL)") +
# Use log10 scale for x-axis instead of log2
scale_x_continuous(trans = "log10", breaks = c(25, 50, 100)) +
# Set plot limits
coord_cartesian(xlim = c(12.5, 150), ylim = c(0, 300)) +
# Custom colors for the new group names
scale_color_manual(values = c("BEC < 0.15" = "darkblue",
"BEC ≥ 0.15 to 0.3" = "darkorange",
"BEC ≥ 0.3" = "darkred")) +
scale_fill_manual(values = c("BEC < 0.15" = "darkblue",
"BEC ≥ 0.15 to 0.3" = "darkorange",
"BEC ≥ 0.3" = "darkred")) +
# Apply theme settings
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
axis.title = element_text(face = "bold", size = 14),
plot.title = element_text(face = "bold", size = 16),
strip.text = element_text(face = "bold", size = 12),
legend.position = "none"
)
# Display the vertical facet plot
print(facet_plot)
# Display the vertical facet plot
print(facet_plot)
ggsave("/Users/macbookpro/Documents/École/Doctorat en recherche/Projets/ORACLE/Project_Placebo/Spline_FeNO_by_BEC_group.png",
plot = facet_plot, width=12, height =4, dpi = 300)
# Vertical facet plot using the new Eosinophils_Group_Names variable
facet_plot <- ggplot(data = all_predictions,
aes(x = FeNO, y = Prediction,
color = Eosinophils_Group_Names, fill = Eosinophils_Group_Names)) +
# Add confidence interval ribbons
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.2, color = NA) +
# Add prediction lines
geom_line(size = 1) +
# Add horizontal reference line at 0
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
# Create separate panels for each eosinophil group VERTICALLY in the specified order
facet_wrap(~ Eosinophils_Group_Names, ncol = 1) +  # Set ncol=3 for horizontal layout
# Labels and formatting
xlab("FeNO (ppb)") +
ylab("Expected FEV1 change (mL)") +
# Use log10 scale for x-axis instead of log2
scale_x_continuous(trans = "log10", breaks = c(25, 50, 100)) +
# Set plot limits
coord_cartesian(xlim = c(12.5, 150), ylim = c(0, 300)) +
# Custom colors for the new group names
scale_color_manual(values = c("BEC < 0.15" = "darkblue",
"BEC ≥ 0.15 to 0.3" = "darkorange",
"BEC ≥ 0.3" = "darkred")) +
scale_fill_manual(values = c("BEC < 0.15" = "darkblue",
"BEC ≥ 0.15 to 0.3" = "darkorange",
"BEC ≥ 0.3" = "darkred")) +
# Apply theme settings
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold", size = 12),
axis.text.y = element_text(face = "bold", size = 12),
axis.title = element_text(face = "bold", size = 14),
plot.title = element_text(face = "bold", size = 16),
strip.text = element_text(face = "bold", size = 12),
legend.position = "none"
)
# Display the vertical facet plot
print(facet_plot)
ggsave("/Users/macbookpro/Documents/École/Doctorat en recherche/Projets/ORACLE/Project_Placebo/Spline_FeNO_by_BEC_group.png",
plot = facet_plot, width=4, height =12, dpi = 300)
